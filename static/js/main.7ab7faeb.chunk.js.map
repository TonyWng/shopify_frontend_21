{"version":3,"sources":["Components/ParticleComponent.js","Components/LandingPage.js","Components/MovieCard.js","Components/MoviePage.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["ParticleComponent","props","id","params","LandingPage","searchMovie","event","setState","value","target","searchResults","fetch","then","data","json","undefined","Title","movieObj","title","image","Poster","price","Year","newResult","state","concat","catch","error","console","log","checkDuplicate","movieTitle","isDuplicate","movieList","forEach","movie","movieNomination","addMovieToList","e","results","window","alert","dispatch","type","confirm","helpModalOpen","Container","className","Row","Col","sm","Search","input","fluid","size","this","onSearchChange","onResultSelect","Modal","basic","onClose","onOpen","open","trigger","Icon","name","circular","style","fontSize","marginTop","Content","Segment","placeholder","inverted","color","textAlign","Header","margin","width","as","List","divided","Item","Actions","Button","onClick","to","React","Component","connect","movieNominations","displayPersonalList","nominationCount","useDispatch","length","Object","keys","map","key","_","Image","rounded","src","Card","height","Plot","Actors","Meta","Rated","Runtime","extra","disabled","marginRight","Popup","content","fitted","initialState","persistConfig","storage","whitelist","store","createStore","persistReducer","action","newMovieList","push","filter","newNominationsList","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","App","path","exact","component","MoviePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab7faeb.chunk.js","sourcesContent":["import React from \"react\"\nimport Particles from 'react-particles-js'\nimport '../App.css'\n\nexport default function ParticleComponent(props) {\n  return (\n    <Particles\n      id=\"particle-js\"\n      params={{\n        \"particles\": {\n          \"number\": {\n            \"value\": 60,\n            \"density\": {\n              \"enable\": true,\n              \"value_area\": 800\n            }\n          },\n          \"color\": {\n            \"value\": \"rgb(33, 150, 243)\"\n          },\n          \"shape\": {\n            \"type\": \"circle\",\n            \"stroke\": {\n              \"width\": 0,\n              \"color\": \"#000000\"\n            },\n          },\n          \"opacity\": {\n            \"value\": 1,\n            \"random\": true,\n            \"anim\": {\n              \"enable\": true,\n              \"speed\": 1,\n              \"opacity_min\": 0,\n              \"sync\": false\n            }\n          },\n          \"size\": {\n            \"value\": 5,\n            \"random\": true,\n            \"anim\": {\n              \"enable\": false,\n              \"speed\": 4,\n              \"size_min\": 0.3,\n              \"sync\": false\n            }\n          },\n          \"line_linked\": {\n            \"enable\": false,\n            \"distance\": 150,\n            \"color\": \"#ffffff\",\n            \"opacity\": 0.4,\n            \"width\": 1\n          },\n          \"move\": {\n            \"enable\": true,\n            \"speed\": 1,\n            \"direction\": \"none\",\n            \"random\": true,\n            \"straight\": false,\n            \"out_mode\": \"out\",\n            \"bounce\": false,\n            \"attract\": {\n              \"enable\": false,\n              \"rotateX\": 600,\n              \"rotateY\": 600\n            }\n          }\n        },\n        \"interactivity\": {\n          \"detect_on\": \"canvas\",\n          \"events\": {\n            \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"bubble\"\n            },\n            \"onclick\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n            },\n            \"resize\": true\n          },\n          \"modes\": {\n            \"grab\": {\n              \"distance\": 400,\n              \"line_linked\": {\n                \"opacity\": 1\n              }\n            },\n            \"bubble\": {\n              \"distance\": 250,\n              \"size\": 0,\n              \"duration\": 2,\n              \"opacity\": 0,\n              \"speed\": 3\n            },\n            \"repulse\": {\n              \"distance\": 400,\n              \"duration\": 0.4\n            },\n            \"push\": {\n              \"particles_nb\": 4\n            },\n            \"remove\": {\n              \"particles_nb\": 2\n            }\n          }\n        },\n        \"retina_detect\": true\n      }}\n    />\n  )\n\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Search, Segment, List, Header, Modal, Icon, Button } from 'semantic-ui-react';\nimport '../App.css'\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport ParticleComponent from './ParticleComponent';\n\nclass LandingPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchResults: [],\n            helpModalOpen: false,\n            value: \"\"\n        }\n    }\n\n    searchMovie = (event) => {\n        //Since searchResults must be array \n        this.setState({\n            value: event.target.value\n        })\n\n        this.setState({\n            searchResults: []\n        })\n\n        fetch('https://www.omdbapi.com/?i=tt3896198&apikey=5adcacf&t=' + event.target.value + '&type=movie&plot=short')\n            .then((data) => data.json())\n            .then((data) => {\n                if (data.Title === undefined) {\n                    return;\n                }\n\n                let movieObj = {\n                    title: data.Title,\n                    image: data.Poster,\n                    price: data.Year,\n                }\n\n                let newResult = this.state.searchResults.concat(movieObj);\n                this.setState({\n                    searchResults: newResult,\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    checkDuplicate = (movieTitle) => {\n        let isDuplicate = false;\n        this.props.movieList.forEach((movie) => {\n            if (movieTitle === movie.Title) {\n                isDuplicate = true;\n            }\n        });\n        this.props.movieNomination.forEach((movie) => {\n            if (movieTitle === movie.Title) {\n                isDuplicate = true; \n            }\n        });\n        return isDuplicate\n    }\n\n    addMovieToList = (e, data) => {\n        fetch('http://www.omdbapi.com/?i=tt3896198&apikey=5adcacf&t=' + data.results[0].title + '&type=movie&plot=short')\n            .then((data) => data.json())\n            .then((data) => {\n                if (data.Title === undefined) {\n                    return;\n                }\n\n                //Check for duplicate\n                if (!this.checkDuplicate(data.Title)) {\n                    this.props.dispatch({\n                        type: \"ADD_MOVIE_TO_LIST\",\n                        data: data\n                    })\n                    window.confirm(\"Movie Succesfully Added to your List!\")\n                } else {\n                    window.alert(\"This Movie Has Already Been Added to your List!\")\n                }\n\n                this.setState({\n                    value: \"\"\n                })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    render() {\n        return (\n            <Container className=\"ContainerStyle\">\n                <ParticleComponent id=\"particle-js\"/>\n                <Row className=\"MarginTop\">\n                    <Col sm={12}>\n                        <h1 className=\"HeaderTextLgB\">Welcome to the Shoppies</h1>\n                        <h1 className=\"HeaderTextMB\">Built by Tony Wang</h1>\n                    </Col>\n                </Row>\n\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={8}>\n                        <Search\n                            input={{ fluid: true }}\n                            className=\"SearchBarStyle\"\n                            size='huge'\n                            results={this.state.searchResults}\n                            onSearchChange={this.searchMovie}\n                            onResultSelect={this.addMovieToList}\n                            value={this.state.value}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={12}>\n                        <Modal\n                            basic\n                            size=\"small\"\n                            onClose={() => this.setState({ helpModalOpen: false })}\n                            onOpen={() => this.setState({ helpModalOpen: true })}\n                            open={this.state.helpModalOpen}\n                            trigger={<Icon name='question' circular style={{ fontSize: \"30px\", marginTop: \"80px\" }} />}\n                        >\n                            <Modal.Content>\n                                <Segment placeholder inverted color='blue' textAlign='center'>\n                                    <Header style={{ margin: 'auto', width: '50%' }} size='huge' as='h2'>\n                                        GETTING STARTED\n                                    </Header>\n                                    <List style={{ margin: 'auto', width: '50%' }} divided size='huge'>\n                                        <List.Item>\n                                            <List.Icon name=\"search\" />\n                                            <List.Content style={{ textAlign: 'left' }}>Search for a movie</List.Content>\n                                        </List.Item>\n                                        <List.Item>\n                                            <List.Icon name=\"add\" />\n                                            <List.Content style={{ textAlign: 'left' }}>Add your favourites to your personal list by selecting the search result</List.Content>\n                                        </List.Item>\n                                        <List.Item>\n                                            <List.Icon name=\"eye\" />\n                                            <List.Content style={{ textAlign: 'left' }}>View your personal list</List.Content>\n                                        </List.Item>\n                                        <List.Item>\n                                            <List.Icon name=\"hand pointer\" />\n                                            <List.Content style={{ textAlign: 'left' }}>Nominate your all time favourites (Max 5)</List.Content>\n                                        </List.Item>\n                                        <List.Item>\n                                            <List.Icon name=\"sync alternate\" />\n                                            <List.Content style={{ textAlign: 'left' }}>You can remove/add movies to your list/nominations at any time</List.Content>\n                                        </List.Item>\n                                        <List.Item>\n                                            <List.Icon name=\"heart outline\" />\n                                            <List.Content style={{ textAlign: 'left' }}>Enjoy!</List.Content>\n                                        </List.Item>\n                                    </List>\n                                </Segment>\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button color='green' onClick={() => this.setState({ helpModalOpen: false })}>\n                                    Got it!\n                            </Button>\n                            </Modal.Actions>\n                        </Modal>\n\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col sm={4}>\n                        <Link to=\"/MoviePage\">\n                            <Button color=\"blue\" style={{ marginTop: \"60px\", fontSize: \"15px\" }}>\n                                <h1 className=\"ButtonText\">View Movie Selections!</h1>\n                            </Button>\n                        </Link>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    movieList: state.movieList,\n    movieNomination: state.movieNominations\n})\n\nexport default connect(mapStateToProps)(LandingPage)","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Card, Button, Transition } from 'semantic-ui-react';\nimport { Row, Col, Image } from 'react-bootstrap';\n\n\n\nconst MovieCard = ({ movieList, movieNomination, displayPersonalList, nominationCount }) => {\n    const dispatch = useDispatch()\n\n    if (movieList && displayPersonalList) {\n        if (movieList.length === 0) {\n            return (\n                <h1 className=\"ButtonText\">You have no movies in your list, begin by adding some movies here!</h1>\n            )\n        } else {\n            return (\n                <div style={{ marginTop: \"60px\" }}>\n                    {Object.keys(movieList).map((key, _) => {\n                        const movie = movieList[key]\n                        if (movie) {\n                            return (\n                                <Row style={{ marginTop: \"30px\" }} className=\"justify-content-md-center\">\n                                    <Col sm={6}>\n                                        <Image fluid rounded src={movie.Poster} />\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Card style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Card.Content>\n                                                <Card.Header><h1 className=\"ButtonText\">{movie.Title}</h1></Card.Header>\n                                                <h1 className=\"DescriptText\">{movie.Plot}</h1>\n                                                <h1 className=\"ActorsText\">Starring: {movie.Actors}</h1>\n                                            </Card.Content>\n                                            <Card.Meta><h1 className=\"MetaText\">{movie.Year} - {movie.Rated} - {movie.Runtime}</h1></Card.Meta>\n                                            <Card.Content extra>\n                                                <div className='ui two buttons'>\n                                                    <Button onClick={() => {\n                                                        dispatch({ type: \"NOMINATE_MOVIE\", data: movie })\n                                                        dispatch({ type: \"REMOVE_MOVIE_FROM_LIST\", Title: movie.Title })\n                                                    }}\n                                                    basic\n                                                    disabled={nominationCount == 5 ? true : false}\n                                                    color='green'>\n                                                        NOMINATE\n                                                    </Button>\n                                                    <Button onClick={() => dispatch({ type: \"REMOVE_MOVIE_FROM_LIST\", Title: movie.Title })} basic color='red'>\n                                                        REMOVE\n                                                    </Button>\n                                                </div>\n                                            </Card.Content>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                        } else {\n                            return null\n                        }\n                    })}\n                </div>\n            )\n        }\n\n    } else if (movieNomination && !displayPersonalList) {\n        if (movieNomination.length === 0) {\n            return (\n                <h1 className=\"ButtonText\">You have not nominated any movies yet, movies you nominate from your list will appear here!</h1>\n            )\n        } else {\n            return (\n                <div style={{ marginTop: \"60px\" }}>\n                    {Object.keys(movieNomination).map((key, _) => {\n                        const movie = movieNomination[key]\n                        if (movie) {\n                            return (\n                                <Row style={{ marginTop: \"30px\" }} className=\"justify-content-md-center\">\n                                    <Col sm={6}>\n                                        <Image fluid rounded src={movie.Poster} />\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Card style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Card.Content>\n                                                <Card.Header><h1 className=\"ButtonText\">{movie.Title}</h1></Card.Header>\n                                                <h1 className=\"DescriptText\">{movie.Plot}</h1>\n                                                <h1 className=\"ActorsText\">Starring: {movie.Actors}</h1>\n                                            </Card.Content>\n                                            <Card.Meta><h1 className=\"MetaText\">{movie.Year} - {movie.Rated} - {movie.Runtime}</h1></Card.Meta>\n                                            <Card.Content extra>\n                                                <Button onClick={() => {\n                                                    dispatch({ type: \"REMOVE_MOVIE_FROM_NOMINATIONS\", Title: movie.Title})\n                                                    dispatch({ type: \"ADD_MOVIE_TO_LIST\", data: movie})\n                                                }} \n                                                    basic \n                                                    color='red'\n                                                    >\n                                                    REMOVE\n                                                </Button>\n\n                                            </Card.Content>\n\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            )\n                        } else {\n                            return null\n                        }\n                    })}\n                </div>\n            )\n        }\n    } else {\n        return null;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        movieList: state.movieList,\n        movieNomination: state.movieNominations,\n        displayPersonalList: state.displayPersonalList,\n        nominationCount: state.nominationCount\n    }\n}\n\n\nexport default connect(mapStateToProps)(MovieCard)","import React from 'react';\nimport { Container, Row, Col} from 'react-bootstrap';\nimport '../App.css';\nimport { connect, useDispatch } from \"react-redux\";\nimport { Button, Icon, Popup } from 'semantic-ui-react';\nimport MovieCard from './MovieCard';\nimport { Link } from 'react-router-dom';\nimport ParticleComponent from './ParticleComponent';\n\nconst MoviePage = ({displayPersonalList, nominationCount}) => {\n    const dispatch = useDispatch()\n        return (\n            <Container className=\"ContainerStyle\">\n                <ParticleComponent id=\"particle-js\"/>\n                <Link to=\"/\">\n                <Icon className=\"BackButton\" style={{fontSize: \"40px\"}} name=\"arrow alternate circle left outline\"/>\n                </Link>\n                <Row >\n                    <Col>\n                        <h1 className=\"MoviePageHeader\">Movie Page</h1>\n                        <h1 className=\"MoviePageSubHeader\">You Can View Your Saved Movies and Nominations Here!</h1>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: \"60px\"}} className=\"justify-content-md-center\">\n                    <Col>\n                        <Button onClick={() => {if(!displayPersonalList) {dispatch({type: \"TOGGLE_MOVIE_LIST\"})}}} style={{fontSize: \"10px\", marginRight: \"10px\"}} color={displayPersonalList ? \"blue\" : \"grey\"} >\n                            <h1 className=\"MovieButton\">My Movie List</h1>\n                        </Button>\n                        <Button onClick={() => {if(displayPersonalList) {dispatch({type: \"TOGGLE_MOVIE_LIST\"})}}} style={{fontSize: \"10px\"}} color={!displayPersonalList ? \"blue\" : \"grey\"} >\n                            <h1 className=\"MovieButton\">My Nominations</h1>\n                        </Button>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <h1 className=\"ButtonText\">Nomination Count: {nominationCount} <Popup content='You can only nominate 5 movies at a time, feel free to remove selections in your nomination list to free up space' trigger={<Icon fitted name=\"question circle\"/>}/></h1>\n                    </Col>\n                </Row>\n                <Container className=\"ScrollableContainer\">\n                    <MovieCard/>\n                </Container>  \n            </Container>\n        )\n}\n\nconst mapStateToProps = (state) => ({\n    displayPersonalList: state.displayPersonalList,\n    nominationCount: state.nominationCount\n})\n\nexport default connect(mapStateToProps)(MoviePage)","import { createStore } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\n\nconst initialState = {\n    movieNominations: [],\n    movieList: [],\n    displayPersonalList: true, \n    nominationCount: 0,\n}\n\nconst persistConfig = {\n    key: 'root',\n    storage, \n    whitelist: ['movieList', 'movieNominations', 'nominationCount']\n}\n\nfunction reducer(state = initialState, action) {\n    switch(action.type) {\n        case \"ADD_MOVIE_TO_LIST\":\n            let newMovieList = [...state.movieList]\n            newMovieList.push(action.data)\n            return {\n                ...state,\n                movieList: newMovieList\n            }\n        case \"REMOVE_MOVIE_FROM_LIST\":\n            return {\n                ...state,\n                movieList: state.movieList.filter((movie) => movie.Title != action.Title),\n            }\n        case \"REMOVE_MOVIE_FROM_NOMINATIONS\":\n            return {\n                ...state,\n                movieNominations: state.movieNominations.filter((movie) => movie.Title != action.Title),\n                nominationCount: state.nominationCount -= 1\n            }\n        case \"NOMINATE_MOVIE\":\n            let newNominationsList = [...state.movieNominations]\n            newNominationsList.push(action.data)\n            return {\n                ...state,\n                movieNominations: newNominationsList,\n                nominationCount: state.nominationCount += 1\n            }\n        case \"TOGGLE_MOVIE_LIST\":\n            return {\n                ...state,\n                displayPersonalList: !state.displayPersonalList\n            }\n        default:\n            return state; \n    }\n}\n\nexport const store = createStore(persistReducer(persistConfig, reducer), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport const persistor = persistStore(store)\n\nexport default {store, persistor};","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LandingPage from './Components/LandingPage';\nimport MoviePage from './Components/MoviePage';\nimport { store, persistor} from './store';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Switch, Route, HashRouter} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}/>\n      <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage}/>\n          <Route path=\"/MoviePage\" exact component={MoviePage}/>\n        </Switch>\n      </div>\n      </HashRouter>\n      \n    </Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}